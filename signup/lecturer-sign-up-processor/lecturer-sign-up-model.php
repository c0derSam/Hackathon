<?php

/**Author : Oladele John

** © 2022 Oladele John

** Web application

** File name : signup/lecturer-sign-up-processor/lecturer-sign-up-model.php

** About : this module signs up the verified lecturer

*/

/**PSUEDO ALGORITHM
 * *
 * initiate the lecturer sign up class
 * fetch all the lecturer data in the sign up form
 * check if the data are submitted
 * sanitize the data
 * define other auto generated data
 * create the neccessary user database
 * process the lecturer avatar
 * insert the data into the lecturer database
 * update the lecturer sign up set up table
 * perform some administrative functions
 * redirect the lecturer to the success page
 * 
 * *
 */

 session_start();

//initiate the lecturer sign up class
class lecturerSignUp{

    public $lecturer_signup_code;
 
    public $title;

    public $email;

    public $name;

    public $gender;

    public $about;

    public $username;

    public $password;


    public $sanitized_title;

    public $sanitized_email;

    public $sanitized_name;

    public $sanitized_gender;

    public $sanitized_about;

    public $sanitized_username;
    
    public $sanitized_password;


    public $encrypted_password;

    public $encrypted_user_id;

    public $date_created;

    public $time_created;

    public $login_status;

    public $profile_status;

    public $type;

    public $avatar_file_name;

    public $sign_up_status;



    //fetch all the lecturer data in the sign up form
    public function fetchLecturerData(){

        session_regenerate_id(true);

        session_regenerate_id(true);

        $this->lecturer_signup_code = base64_decode($_SESSION['lecturer_verification_code']);

        $this->title = $_POST['title'];
        $this->email = $_POST['email'];
        $this->name = $_POST['name'];
        $this->gender = $_POST['gender'];
        $this->about = $_POST['about'];
        $this->username = $_POST['username'];
        $this->password = $_POST['password'];

    }

    //sanitize the data
    public function sanitize($connection,$data){

        $data = htmlspecialchars($data);
        $data = stripslashes($data);
        $data = strip_tags($data);
        $data = $connection->real_escape_string($data);

        return $data; 

    }

    //define other auto generated data
    public function autoGeneratedData(){

        $this->encrypted_password = md5($this->sanitized_password);

        //encrypted user id
        $random_number = rand();
        $this->encrypted_user_id = md5($random_number);

        date_default_timezone_set("Africa/Lagos");
        $this->date_created = date("Y/m/d");
        $this->time_created = date("h:i:sa");

        $this->login_status = "Not set";
        $this->profile_status = "live";

        $this->type = "lecturer";

    }

    //create the neccessary user database
    public function lecturerResetPassword(){

        // user db connection
        include('../../resources/database/users-reset-password-db-connection.php');

        $code = rand() * 1000000;

        //insert into the database
        $insert_into_reset_password_table = "INSERT INTO password_reset_codes
        (
            reset_code,encrypted_user_id,user_type
        )
        VALUES(
            '$code','$this->encrypted_user_id','$this->type'
        )
        ";

        $conn18->query($insert_into_reset_password_table);

        mysqli_close($conn18);

    }


    public function lecturerNotification(){

        //require the env library
        require('../../vendorEnv/autoload.php');

        $user_db_conn_env = Dotenv\Dotenv::createImmutable(__DIR__, '../../env/db-conn-var.env');
        $user_db_conn_env->load();

        // user db connection
        include('../../resources/database/users-notification-db-connection.php');

        $user_noitification_table = "CREATE TABLE notification_for_user".$this->encrypted_user_id."
        (
            id int NOT NULL AUTO_INCREMENT,
            link text,
            message text,
            date text,
            time text,
            status text,
            PRIMARY KEY(id)
        )";

        if($conn15->query($user_noitification_table)){

        }else{


        }

        mysqli_close($conn15);

    }

    //process the lecturer avatar
    public function processingLecturerAvatar(){

        switch($_FILES['avatar']['type']){
                case 'image/jpg': $ext = 'jpg'; break;
                case 'image/jpeg': $ext = 'jpeg'; break;        
                case 'image/gif': $ext = 'gif'; break; 
                case 'image/png': $ext = 'png'; break; 
                case 'image/tiff': $ext = 'tif'; break; 
                default: $ext = ''; break; 
        }

        if ($ext){

            $random_number = rand();

            $this->avatar_file_name = "$random_number.$ext"; 
  
            //image directory
            $target = "../../resources/avatars/".basename($this->avatar_file_name);
    
            //moving uploaded image to directory
            if(move_uploaded_file($_FILES['avatar']['tmp_name'],$target)){

                //echo "lecturer avatar uploaded";
                            
            }else{

               //echo "could not upload lecturer avatar";          

            }
  
  
        }else{
         
               //echo "Not an iamge";

        }


    }

    //insert the data into the lecturer database
    public function insertLecturerIntoDb(){

       // user db connection
       include('../../resources/database/users-db-connection.php');

       $insert_into_lecturer_db_query = "INSERT INTO lecturers (title,email,fullname,about,gender,username,password,
       avatar,encrypted_id,date_created,time_created,login_status,profile_status,type) 
       VALUES('$this->sanitized_title','$this->sanitized_email','$this->sanitized_name','$this->sanitized_about',
       '$this->sanitized_gender','$this->sanitized_username','$this->encrypted_password','$this->avatar_file_name',
       '$this->encrypted_user_id','$this->date_created','$this->time_created','$this->login_status',
       '$this->profile_status','$this->type')";

        if($conn1->query($insert_into_lecturer_db_query)){

            $this->sign_up_status = "true";

          
        }else{

            $this->sign_up_status = "false";


        }

        mysqli_close($conn1);

    }

}


?>